[{"title":"Hello World","url":"/2022/04/22/hello-world/","content":"<p>世界上的知识如同一片无边无际的汪洋大海，我维京人的目的就是掠夺！</p>\n<h2 id=\"做任何事情都会有代价\"><a href=\"#做任何事情都会有代价\" class=\"headerlink\" title=\"做任何事情都会有代价\"></a>做任何事情都会有代价</h2><p>##总有外在的风险需要防范</p>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"Fortran批量处理","url":"/2022/04/26/fortran%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86/","content":"<p><em><strong>Fortran批量处理</strong></em></p>\n<span id=\"more\"></span>\n<p>程序中需要读取或处理大量文件的时候，在代码中写入大量的 open 语句就显得很笨重，如果文件很多（比如有 1000 个文件），这种方法根本不可行。针对这种情况，介绍两种解决方法。<br>##1<br>考虑如下情形：假设存在 100 个文件，分别存储了 1900-1999 年的降雨量，现在需要计<br>算着 100 年的总降雨量。文件名为：前缀+年份+后缀，例如：降雨量-1900.dat、降雨量<br>-1901.dat 。由于文件名是有规律的，仅年份变化，可以用循环来一次读取文件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">program test</span><br><span class=\"line\">integer i</span><br><span class=\"line\">real s, a</span><br><span class=\"line\">character(20):: filename=&#x27;降雨量-1234.dat&#x27;</span><br><span class=\"line\">s = 0.0</span><br><span class=\"line\">do i=1900, 1999</span><br><span class=\"line\">!内部文件读写，将 filename 第 8-11 字符换为相应年份</span><br><span class=\"line\">write(filename(8:11),&#x27;(i4)&#x27;) i</span><br><span class=\"line\">open(11,file=filename)</span><br><span class=\"line\">read(11,*) a</span><br><span class=\"line\">close(11)</span><br><span class=\"line\">s = s + a</span><br><span class=\"line\">end do</span><br><span class=\"line\">end program</span><br></pre></td></tr></table></figure>\n<p>这种方法优点是可以按顺序读取文件，缺陷也很明显，只能处理有规律的文件名。</p>\n","categories":["Fortran"],"tags":["Fortran"]}]